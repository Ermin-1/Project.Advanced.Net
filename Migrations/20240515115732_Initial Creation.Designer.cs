// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projekt___Avancerad_.NET.Data;

#nullable disable

namespace Project.Advanced.Net.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240515115732_Initial Creation")]
    partial class InitialCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectModels.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentId"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("AppointmentId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            AppointmentId = 1,
                            CompanyId = 1,
                            CustomerId = 1,
                            Time = new DateTime(2024, 5, 15, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3484)
                        },
                        new
                        {
                            AppointmentId = 2,
                            CompanyId = 1,
                            CustomerId = 1,
                            Time = new DateTime(2024, 5, 16, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3536)
                        },
                        new
                        {
                            AppointmentId = 3,
                            CompanyId = 1,
                            CustomerId = 1,
                            Time = new DateTime(2024, 5, 17, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3548)
                        },
                        new
                        {
                            AppointmentId = 4,
                            CompanyId = 1,
                            CustomerId = 2,
                            Time = new DateTime(2024, 5, 15, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3558)
                        },
                        new
                        {
                            AppointmentId = 5,
                            CompanyId = 1,
                            CustomerId = 2,
                            Time = new DateTime(2024, 5, 25, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3567)
                        },
                        new
                        {
                            AppointmentId = 6,
                            CompanyId = 1,
                            CustomerId = 2,
                            Time = new DateTime(2024, 6, 4, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3576)
                        },
                        new
                        {
                            AppointmentId = 7,
                            CompanyId = 2,
                            CustomerId = 3,
                            Time = new DateTime(2024, 5, 15, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3586)
                        },
                        new
                        {
                            AppointmentId = 8,
                            CompanyId = 2,
                            CustomerId = 3,
                            Time = new DateTime(2024, 5, 30, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3594)
                        },
                        new
                        {
                            AppointmentId = 9,
                            CompanyId = 2,
                            CustomerId = 3,
                            Time = new DateTime(2024, 6, 4, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3603)
                        },
                        new
                        {
                            AppointmentId = 10,
                            CompanyId = 3,
                            CustomerId = 4,
                            Time = new DateTime(2024, 5, 15, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3613)
                        },
                        new
                        {
                            AppointmentId = 11,
                            CompanyId = 3,
                            CustomerId = 4,
                            Time = new DateTime(2024, 5, 16, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3623)
                        },
                        new
                        {
                            AppointmentId = 12,
                            CompanyId = 3,
                            CustomerId = 4,
                            Time = new DateTime(2024, 5, 17, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3633)
                        },
                        new
                        {
                            AppointmentId = 13,
                            CompanyId = 5,
                            CustomerId = 5,
                            Time = new DateTime(2024, 5, 15, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3643)
                        },
                        new
                        {
                            AppointmentId = 14,
                            CompanyId = 5,
                            CustomerId = 5,
                            Time = new DateTime(2024, 5, 25, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3653)
                        },
                        new
                        {
                            AppointmentId = 15,
                            CompanyId = 5,
                            CustomerId = 5,
                            Time = new DateTime(2024, 5, 30, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3662)
                        },
                        new
                        {
                            AppointmentId = 16,
                            CompanyId = 5,
                            CustomerId = 6,
                            Time = new DateTime(2024, 5, 15, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3672)
                        },
                        new
                        {
                            AppointmentId = 17,
                            CompanyId = 5,
                            CustomerId = 6,
                            Time = new DateTime(2024, 5, 23, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3681)
                        },
                        new
                        {
                            AppointmentId = 18,
                            CompanyId = 5,
                            CustomerId = 6,
                            Time = new DateTime(2024, 5, 17, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3692)
                        },
                        new
                        {
                            AppointmentId = 19,
                            CompanyId = 1,
                            CustomerId = 7,
                            Time = new DateTime(2024, 5, 15, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3701)
                        },
                        new
                        {
                            AppointmentId = 20,
                            CompanyId = 1,
                            CustomerId = 7,
                            Time = new DateTime(2024, 6, 9, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3710)
                        },
                        new
                        {
                            AppointmentId = 21,
                            CompanyId = 1,
                            CustomerId = 7,
                            Time = new DateTime(2024, 6, 5, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3731)
                        },
                        new
                        {
                            AppointmentId = 22,
                            CompanyId = 2,
                            CustomerId = 8,
                            Time = new DateTime(2024, 5, 15, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3753)
                        },
                        new
                        {
                            AppointmentId = 23,
                            CompanyId = 2,
                            CustomerId = 8,
                            Time = new DateTime(2024, 5, 19, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3762)
                        },
                        new
                        {
                            AppointmentId = 24,
                            CompanyId = 2,
                            CustomerId = 8,
                            Time = new DateTime(2024, 5, 23, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3843)
                        },
                        new
                        {
                            AppointmentId = 25,
                            CompanyId = 3,
                            CustomerId = 9,
                            Time = new DateTime(2024, 5, 15, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3865)
                        },
                        new
                        {
                            AppointmentId = 26,
                            CompanyId = 3,
                            CustomerId = 9,
                            Time = new DateTime(2024, 5, 19, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3876)
                        },
                        new
                        {
                            AppointmentId = 27,
                            CompanyId = 3,
                            CustomerId = 9,
                            Time = new DateTime(2024, 5, 24, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3886)
                        },
                        new
                        {
                            AppointmentId = 28,
                            CompanyId = 4,
                            CustomerId = 10,
                            Time = new DateTime(2024, 5, 15, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3896)
                        },
                        new
                        {
                            AppointmentId = 29,
                            CompanyId = 4,
                            CustomerId = 10,
                            Time = new DateTime(2024, 5, 16, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3906)
                        },
                        new
                        {
                            AppointmentId = 30,
                            CompanyId = 4,
                            CustomerId = 10,
                            Time = new DateTime(2024, 5, 17, 13, 57, 31, 753, DateTimeKind.Local).AddTicks(3915)
                        });
                });

            modelBuilder.Entity("ProjectModels.AppointmentHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.ToTable("AppointmentHistories");
                });

            modelBuilder.Entity("ProjectModels.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            CompanyId = 1,
                            Name = "Apple"
                        },
                        new
                        {
                            CompanyId = 2,
                            Name = "Samsung"
                        },
                        new
                        {
                            CompanyId = 3,
                            Name = "Xiaomi"
                        },
                        new
                        {
                            CompanyId = 4,
                            Name = "Google"
                        },
                        new
                        {
                            CompanyId = 5,
                            Name = "Microsoft"
                        },
                        new
                        {
                            CompanyId = 6,
                            Name = "Amazon"
                        });
                });

            modelBuilder.Entity("ProjectModels.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "Campusvägen 7",
                            FirstName = "Ermin",
                            LastName = "Husic",
                            PhoneNumber = 734141429
                        },
                        new
                        {
                            CustomerId = 2,
                            Address = "Storgatan 10",
                            FirstName = "Oskar",
                            LastName = "Johansson",
                            PhoneNumber = 723456789
                        },
                        new
                        {
                            CustomerId = 3,
                            Address = "Lilla vägen 3",
                            FirstName = "Sharam",
                            LastName = "Khan",
                            PhoneNumber = 734567890
                        },
                        new
                        {
                            CustomerId = 4,
                            Address = "Parkgatan 15",
                            FirstName = "Christian",
                            LastName = "Andersson",
                            PhoneNumber = 765432109
                        },
                        new
                        {
                            CustomerId = 5,
                            Address = "Skolgatan 2",
                            FirstName = "Lena",
                            LastName = "Eriksson",
                            PhoneNumber = 721567890
                        },
                        new
                        {
                            CustomerId = 6,
                            Address = "Kyrkvägen 6",
                            FirstName = "Andreas",
                            LastName = "Lindström",
                            PhoneNumber = 709876543
                        },
                        new
                        {
                            CustomerId = 7,
                            Address = "Strandvägen 12",
                            FirstName = "Emily",
                            LastName = "Nilsson",
                            PhoneNumber = 723456781
                        },
                        new
                        {
                            CustomerId = 8,
                            Address = "Backstugan 4",
                            FirstName = "David",
                            LastName = "Gustafsson",
                            PhoneNumber = 761234567
                        },
                        new
                        {
                            CustomerId = 9,
                            Address = "Musselvägen 4",
                            FirstName = "Sophia",
                            LastName = "Berg",
                            PhoneNumber = 723456782
                        },
                        new
                        {
                            CustomerId = 10,
                            Address = "Storgatan 2",
                            FirstName = "Alexander",
                            LastName = "Larsson",
                            PhoneNumber = 768765432
                        });
                });

            modelBuilder.Entity("ProjectModels.Appointment", b =>
                {
                    b.HasOne("ProjectModels.Company", "Company")
                        .WithMany("Appointments")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectModels.Customer", "Customer")
                        .WithMany("Appointments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ProjectModels.AppointmentHistory", b =>
                {
                    b.HasOne("ProjectModels.Appointment", "Appointment")
                        .WithMany()
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");
                });

            modelBuilder.Entity("ProjectModels.Company", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("ProjectModels.Customer", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
